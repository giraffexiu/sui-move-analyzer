name: release

on:
  workflow_dispatch:

env:
  FETCH_DEPTH: 0
  CARGO_INCREMENTAL: 0

jobs:
  build:
    name: Build & Package VSIX
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            rust_target: x86_64-unknown-linux-gnu
            container: quay.io/pypa/manylinux_2_28_x86_64
            code_target: linux-x64
          - os: macos-13
            rust_target: x86_64-apple-darwin
            code_target: darwin-x64
          - os: macos-14
            rust_target: aarch64-apple-darwin
            code_target: darwin-arm64
          - os: windows-latest
            rust_target: x86_64-pc-windows-msvc
            code_target: win32-x64

    runs-on: ${{ matrix.os }}
    container: ${{ matrix.container }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: ${{ env.FETCH_DEPTH }}

      - name: Install rustup
        if: ${{ matrix.container }}
        run: |
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y --profile minimal
          echo "$HOME/.cargo/bin" >> $GITHUB_PATH

      - name: Install Rust toolchain
        run: |
          rustup update --no-self-update stable
          rustup component add rust-src
          rustup target add ${{ matrix.rust_target }}

      - name: Build Rust server
        run: cargo build --release --target ${{ matrix.rust_target }}

      - name: Prepare server folder (Linux & MacOS)
        shell: bash
        run: |
          if [[ "${{ runner.os }}" != "Windows" ]]; then
            mkdir -p editors/code/server
            BIN_NAME=sui-move-analyzer
            cp target/${{ matrix.rust_target }}/release/$BIN_NAME editors/code/server/
            mkdir -p dist
          fi

      - name: Prepare server folder (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          $binName = "sui-move-analyzer.exe"
          New-Item -ItemType Directory -Force -Path editors\code\server
          Copy-Item -Path "target\${{ matrix.rust_target }}\release\$binName" -Destination editors\code\server\
          New-Item -ItemType Directory -Force -Path dist

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - name: npm run
        working-directory: ./editors/code
        run: |
          npm ci
          npx tsc -p .

      - name: Package VSIX
        run: |
          cd editors/code
          npx vsce package --target ${{ matrix.code_target }} -o ../../dist/sui-move-analyzer-${{ matrix.code_target }}.vsix

      - name: Upload VSIX
        uses: actions/upload-artifact@v4
        with:
          name: sui-move-analyzer-vsix-${{ matrix.code_target }}
          path: dist/sui-move-analyzer-${{ matrix.code_target }}.vsix

  publish:
    name: Publish VSIX to OpenVSX
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22

      - run: mkdir -p dist

      - name: Download Linux VSIX
        uses: actions/download-artifact@v4
        with:
          name: sui-move-analyzer-vsix-linux-x64
          path: dist

      - name: Download macOS x64 VSIX
        uses: actions/download-artifact@v4
        with:
          name: sui-move-analyzer-vsix-darwin-x64
          path: dist

      - name: Download macOS arm64 VSIX
        uses: actions/download-artifact@v4
        with:
          name: sui-move-analyzer-vsix-darwin-arm64
          path: dist

      - name: Download Windows VSIX
        uses: actions/download-artifact@v4
        with:
          name: sui-move-analyzer-vsix-win32-x64
          path: dist

      - name: Publish to OpenVSX
        run: |
          npx ovsx publish --pat ${{ secrets.OPENVSX_TOKEN }} --packagePath dist/sui-move-analyzer*.vsix

      - name: Publish to Vscode Marketplace
        run: |
          npx vsce publish --pat ${{ secrets.VSCODE_MARKET_TOKEN }} --packagePath dist/sui-move-analyzer-*.vsix 